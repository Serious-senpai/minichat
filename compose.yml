# Reference: https://docs.docker.com/reference/compose-file/
name: minichat

x-rabbitmq-default: &rabbitmq-default
  build:
    context: .
    dockerfile: services/rabbitmq/Dockerfile
  environment:
    - RABBITMQ_ERLANG_COOKIE=cluster_cookie
  healthcheck:
    test: rabbitmq-diagnostics -q status
    interval: 5s
    timeout: 5s
    retries: 20
    start_period: 15s
  mem_limit: 1gb
  user: rabbitmq

services:
  scylla:
    command:
      - --reactor-backend=epoll
      - --seeds=minichat-scylla-1,minichat-scylla-2,minichat-scylla-3
      - --smp=1
    deploy:
      replicas: 3
    healthcheck:
      test: cqlsh -e "DESCRIBE CLUSTER"
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 15s
    # hostname: scylla  # Hostnames for replicas: {project name}-api-service-{replica number}, see [http.upstream] in services/api-proxy/nginx.conf
    image: scylladb/scylla:6.2
    mem_limit: 1gb

  rabbitmq-1:
    container_name: rabbitmq-1
    hostname: rabbitmq-1
    <<: *rabbitmq-default

  rabbitmq-2:
    container_name: rabbitmq-2
    hostname: rabbitmq-2
    <<: *rabbitmq-default

  rabbitmq-3:
    container_name: rabbitmq-3
    hostname: rabbitmq-3
    <<: *rabbitmq-default

  data-service:
    build:
      context: .
      dockerfile: services/data/Dockerfile
    command:
      - --host=0.0.0.0
      - --port=16000
      - --scylla-hosts=minichat-scylla-1,minichat-scylla-2,minichat-scylla-3
      - --amqp-host=amqp://guest:guest@rabbitmq-1:5672
    container_name: data-service
    depends_on:
      scylla:
        condition: service_healthy
      rabbitmq-1:
        condition: service_healthy
      rabbitmq-2:
        condition: service_healthy
      rabbitmq-3:
        condition: service_healthy
    hostname: data-service

  api-service:
    build:
      context: .
      dockerfile: services/api/Dockerfile
    command:
      - --host=0.0.0.0
      - --port=8000
      - --data-service=data-service:16000
      - --amqp-host=amqp://guest:guest@rabbitmq-1:5672
    depends_on:
      - data-service
    deploy:
      replicas: 2
    # hostname: api-service

  api-reverse-proxy:
    build:
      context: .
      dockerfile: services/api-proxy/Dockerfile
    container_name: api-reverse-proxy
    depends_on:
      - api-service
    ports:
      - "80:80"
